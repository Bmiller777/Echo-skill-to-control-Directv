var http = require('http'); // if going through a proxy that uses SSL change to "require('https');"

// Your external IP. Alexa can only access publically-accessible IPs. No LAN access unfortunately.
// Make sure to set up port forwarding on port 8080 to your DTV's IP on your router.
// In my case I had to move receiver to DMZ
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var local_ip = 'xxx.xxx.xxx.xxx';
//externalIP or FQDN //////////////////////////////////////////////////////////////////////////
//var local_ip = '<some fqdn>';
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * App ID for the skill
 */
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var APP_ID = "amzn1.echo-sdk-ams.app.[APPID]"; 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * The AlexaSkill prototype and helper functions
 */
var AlexaSkill = require('./AlexaSkill');
   
var DTVControl = function () {
    AlexaSkill.call(this, APP_ID);
};


// Extend AlexaSkill
DTVControl.prototype = Object.create(AlexaSkill.prototype);
DTVControl.prototype.constructor = DTVControl;

//Ignore Certificate errors if using HTTPS communication
process.env.NODE_TLS_REJECT_UNAUTHORIZED = "0";

DTVControl.prototype.intentHandlers = {
        DirectvIntent: function (intent, session, response) {
        
        //No matter what she wants to tell you her opinion.
        
        function satisfyAlexa() {
                        response.tell("OK");
                        };
        
        // Obtain User Intent

        switch(intent.slots.Control.value) {
                
                // Same button is used
                case "to play":
				case "play":
				case "resume":
                      path = '/remote/processKey?key=play&hold=keyPress';
                break;
           
				case "to pause":
				case "pause":
				case "freeze":
                       path = '/remote/processKey?key=pause&hold=keyPress';
                break;
				
				case "go to guide":
				case "open guide":
                        path = '/remote/processKey?key=guide&hold=keyPress'
                break;
				
				case "power":
                        path = '/remote/processKey?key=power&hold=keyPress';
                break;
				
				case "to turn on":
				case "power up":
				case "power on":
                       path = '/remote/processKey?key=poweron&hold=keyPress';
                break;
				
				case "to turn the power off":
				case "to turn off":
				case "power off":
				case "power down":
                       path = '/remote/processKey?key=poweroff&hold=keyPress';
                break;
				
				case "format":
                       path = '/remote/processKey?key=format&hold=keyPress';
                break;
				
				case "to rewind":
				case "rewind":
                       path = '/remote/processKey?key=rew&hold=keyPress';
                break;
				
				case "to replay":
				case "replay":
                         path = '/remote/processKey?key=replay&hold=keyPress';
                break;
				
				case "to stop":
				case "stop":
                          path= '/remote/processKey?key=stop&hold=keyPress';
                break;
				
				case "advance":
                                path= '/remote/processKey?key=advance&hold=keyPress';
                break;
				
				case "to fast forward":
				case "fast forward":
                                path = '/remote/processKey?key=ffwd&hold=keyPress';
                break;
				
				case "to record":
				case "record":
				case "save":
                                path = '/remote/processKey?key=record&hold=keyPress'
                break;
				
				case "active":
                                path= '/remote/processKey?key=active&hold=keyPress';
                break;
				
				case "go to list":
				case "list":
				case "find recorded shows":
				case "DVR":
                                path = '/remote/processKey?key=list&hold=keyPress';
                break;
				
				case "exit":
				case "end":
				case "leave":
                                path = '/remote/processKey?key=exit&hold=keyPress';
                break;
				
				case "go back":
				case "back":
                                path= '/remote/processKey?key=back&hold=keyPress';
                break;
				
				case "go to menu":
				case "menu":
				case "main menu":
                                path = '/remote/processKey?key=menu&hold=keyPress';
                break;
				
				case "go to info":
				case "info":
				case "find info":
                                path= '/remote/processKey?key=info&hold=keyPress';
                break;
				
				case "go up":
				case "move up":
				case "up":

                                path = '/remote/processKey?key=up&hold=keyPress';
                break;
				
				case "go down":
				case "move down":
				case "down":
                                path = '/remote/processKey?key=down&hold=keyPress';
                break;
				
				case "go left":
				case "move left":
				case "left":
                                path= '/remote/processKey?key=left&hold=keyPress';
                break;
				
				case "go right":
				case "move right":
				case "right":
                                path= '/remote/processKey?key=right&hold=keyPress';
                break;
				
				case "select":
				case "enter":
				case "to enter":
                                path=  '/remote/processKey?key=select&hold=keyPress';
                break;
				
				case "red button":
				case "delete all":
                                path= '/remote/processKey?key=red&hold=keyPress';
                break;
				
				case "green button":
                                path= '/remote/processKey?key=green&hold=keyPress';
                break;
				
				case "yellow button":

                                path= '/remote/processKey?key=yellow&hold=keyPress';
                break;
				
				case "blue button":
                                path= '/remote/processKey?key=blue&hold=keyPress';
                break;
				
				case "channel up":
                                path= '/remote/processKey?key=chanup&hold=keyPress';
                break;
				
				case "channel down":
				case "page down":
                     path = '/remote/processKey?key=chandown&hold=keyPress';
                break;
				
				case "previous channel":
				case "last channel":
				case "go back to the last channel":
				case "change it back to what i was watching":
                     path= '/remote/processKey?key=prev&hold=keyPress';
                break;
				
				case "dash":
                     path = '/remote/processKey?key=dash&hold=keyPress';
                break;
				
				case "to turn on cnn":
				case "tune to cnn":
				case "cnn":
				case "change channel to cnn":
					path = '/tv/tune?major=202&minor=65535';
                
				break;
				
				case "to turn on amc":
				case "tune to amc":
				case "amc":
				case "change channel to amc":
					path = '/tv/tune?major=254&minor=65535';
                
				break;
				
				case "to turn on ane":
				case "tune to ane":
				case "ane":
				case "change channel to ane":
					path = '/tv/tune?major=265&minor=65535';
                
				break;
				
				case "to turn on animal planet":
				case "tune to animal planet":
				case "animal planet":
				case "change channel to animal planet":
					path = '/tv/tune?major=282&minor=65535';
                
				break;
				
				case "to turn on bet":
				case "tune to bet":
				case "bet":
				case "change channel to bet":
					path = '/tv/tune?major=329&minor=65535';
                
				break;
				
				case "to turn on bravo":
				case "tune to bravo":
				case "bravo":
				case "change channel to bravo":
					path = '/tv/tune?major=237&minor=65535';
                
				break;
				
				case "to turn on comedy central":
				case "tune to comedy central":
				case "comedy central":
				case "change channel to comedy central":
					path = '/tv/tune?major=249&minor=65535';
                
				break;
				
				case "to turn on c span":
				case "tune to c span":
				case "c span":
				case "change channel to c span":
					path = '/tv/tune?major=250&minor=65535';
                
				break;
				
				case "to turn on cartoon network":
				case "tune to cartoon network":
				case "cartoon network":
				case "change channel to cartoon network":
					path = '/tv/tune?major=296&minor=65535';
                
				break;
				
				case "to turn on discovery":
				case "tune to discovery":
				case "discovery":
				case "change channel to discovery":
					path = '/tv/tune?major=278&minor=65535';
                
				break;
				
				case "to turn on disney channel":
				case "tune to disney channel":
				case "disney channel":
				case "change channel to disney channel":
					path = '/tv/tune?major=290&minor=65535';
                
				break;
				
				case "to turn on disney junior":
				case "tune to disney junior":
				case "disney junior":
				case "change channel to disney junior":
					path = '/tv/tune?major=289&minor=65535';
                
				break;
				
				case "to turn on disney xd":
				case "tune to disney xd":
				case "disney xd":
				case "change channel to disney xd":
					path = '/tv/tune?major=292&minor=65535';
                
				break;
				
				case "to turn on food network":
				case "tune to food network":
				case "food network":
				case "change channel to food network":
					path = '/tv/tune?major=231&minor=65535';
                
				break;
				
				case "to turn on fox":
				case "tune to fox":
				case "fox":
				case "change channel to fox":
					path = '/tv/tune?major=360&minor=65535';
                
				break;
				
				case "to turn on fx":
				case "tune to fx":
				case "fx":
				case "change channel to fx":
					path = '/tv/tune?major=248&minor=65535';
                
				break;
				
				case "to turn on hgtv":
				case "tune to hgtv":
				case "hgtv":
				case "change channel to hgtv":
					path = '/tv/tune?major=229&minor=65535';
                
				break;
				
				case "to turn on history channel":
				case "tune to history channel":
				case "history channel":
				case "change channel to history channel":
					path = '/tv/tune?major=269&minor=65535';
                
				break;
				
				case "to turn on lifetime":
				case "tune to lifetime":
				case "lifetime":
				case "change channel to lifetime":
					path = '/tv/tune?major=252&minor=65535';
                
				break;
				
				case "to turn on msnbc":
				case "tune to msnbc":
				case "msnbc":
				case "change channel to msnbc":
					path = '/tv/tune?major=356&minor=65535';
                
				break;
				
				case "to turn on mtv":
				case "tune to mtv":
				case "mtv":
				case "change channel to mtv":
					path = '/tv/tune?major=331&minor=65535';
                
				break;
				
				case "to turn on mtv two":
				case "tune to mtv two":
				case "mtv two":
				case "change channel to mtv two":
					path = '/tv/tune?major=333&minor=65535';
                
				break;
				
				case "to turn on national geographic":
				case "tune to national geographic":
				case "national geographic":
				case "change channel to national geographic":
					path = '/tv/tune?major=276&minor=65535';
                
				break;
				
				case "to turn on national geographic channel":
				case "tune to national geographic channel":
				case "national geographic channel":
				case "change channel to national geographic channel":
					path = '/tv/tune?major=276&minor=65535';
                
				break;
				
				case "to turn on nick junior":
				case "tune to nick junior":
				case "nick junior":
				case "change channel to nick junior":
					path = '/tv/tune?major=301&minor=65535';
                
				break;
				
				case "to turn on spike":
				case "tune to spike":
				case "spike":
				case "change channel to spike":
					path = '/tv/tune?major=241&minor=65535';
                
				break;
				
				case "to turn on syfy":
				case "tune to syfy":
				case "syfy":
				case "change channel to syfy":
					path = '/tv/tune?major=244&minor=65535';
                
				break;
				
				case "to turn on tbs":
				case "tune to tbs":
				case "tbs":
				case "change channel to tbs":
					path = '/tv/tune?major=247&minor=65535';
                
				break;
				
				case "to turn on tnt":
				case "tune to tnt":
				case "tnt":
				case "change channel to tnt":
					path = '/tv/tune?major=245&minor=65535';
                
				break;
				
				case "to turn on true tv":
				case "tune to true tv":
				case "true tv":
				case "change channel to true tv":
					path = '/tv/tune?major=246&minor=65535';
                
				break;
				
				case "to turn on vh one":
				case "tune to vh one":
				case "vh one":
				case "change channel to vh one":
					path = '/tv/tune?major=335&minor=65535';
                
				break;
				
				case "to turn on espn":
				case "tune to espn":
				case "espn":
				case "change channel to espn":
					path = '/tv/tune?major=206&minor=65535';
                
				break;
				
				case "to turn on espn two":
				case "tune to espn two":
				case "espn two":
				case "change channel to espn two":
					path = '/tv/tune?major=209&minor=65535';
                
				break;
        
                default:
                        response.tell("I didn't hear an option.");
                break;       
                
        } 
		var options = {
                     host: local_ip,
                     port: 8080, // default port for DTV interface
                     path: '' + path, // Modify if path is prefixed 
                     method: 'GET' //, //(remove first comment slashes if using the "auth" option below)
					 // auth: 'username:password' // this is used if going through authenticated proxy (this is BASIC AUTH)
                    };
          var req = http.request(options, satisfyAlexa);
          req.end();						
        }
}

exports.handler = function (event, context) {
       
        var dtvControl = new DTVControl();
        dtvControl.execute(event, context);
        
};
